#!/usr/bin/env bash

function error_and_die() {
  echo -e "${1}" >&2
  exit 1
}

[ -n "$TFENV_DEBUG" ] && set -x

[ $# -ne 1 ] && error_and_die "usage: tfenv use <version>"

declare version
if [[ "${1}" =~ ^latest\:.*$ ]]; then
  version="${1%%\:*}"
  regex="${1##*\:}"
else
  version="${1}"
fi

[ -d "${TFENV_ROOT}/versions" ] \
  || error_and_die "No versions of terraform installed. Please install one with: tfenv install"

[ "${version}" == "latest" ] \
  && version="$(\ls "${TFENV_ROOT}/versions" \
    | sort -t'.' -k 1nr,1 -k 2nr,2 -k 3nr,3 \
    | grep -e "${regex}" \
    | head -n 1
  )"

[ -n "${version}" ] || error_and_die "Version not specified or not found"

target_path=${TFENV_ROOT}/versions/${version}
[ -f ${target_path}/terraform ] \
  || error_and_die "Terraform version ${version} is not installed"

echo "${version}" > "${TFENV_ROOT}/version"
terraform --version || error_and_die "'terraform --version' failed. Something is seriously wrong"
